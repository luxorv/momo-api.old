require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator.  If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails.  There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.
#
# Compared to earlier versions of this generator, there is very limited use of
# stubs and message expectations in this spec.  Stubs are only used when there
# is no simpler way to get a handle on the object needed for the example.
# Message expectations are only used when there is no simpler way to specify
# that an instance is receiving a specific message.

RSpec.describe GenresController, :type => :controller do

  # This should return the minimal set of attributes required to create a valid
  # Genre. As you add validations to Genre, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) {
    attrs = attributes_for(:genre)
    attrs
  }

  let(:auth_params) {
    auth_params = {}

    otaku = Otaku.last
    otaku.authentication_token ||= Devise.friendly_token
    auth_params[:otaku_email] = otaku.email
    auth_params[:otaku_token] = otaku.authentication_token

    auth_params
  }

  let(:invalid_attributes) {
    attrs = attributes_for(:anime)
    attrs
  }

  # This should return the minimal set of values that should be in the session
  # in order to pass any filters (e.g. authentication) defined in
  # GenresController. Be sure to keep this updated too.
  let(:valid_session) { {} }

  describe "GET index" do
    it "assigns all genres as @genres" do
      genres = Genre.all.to_json
      puts auth_params

      get :index, auth_params, valid_session
      expect(assigns(:genres).to_json).to eq(genres)
    end
  end

  describe "GET show" do
    it "assigns the requested genre as @genre" do
      genre = Genre.create! valid_attributes

      auth_params[:id] = genre.to_param
      puts auth_params

      get :show, auth_params, valid_session
      expect(assigns(:genre)).to eq(genre)
    end


  end

end
